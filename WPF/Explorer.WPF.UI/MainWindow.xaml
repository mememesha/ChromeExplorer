<windowGoogleChrome:GoogleChromeWindow
    x:Class="Explorer.WPF.UI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:windowGoogleChrome="clr-namespace:MikeV.WindowGoogleChrome.Wpf;assembly=MikeV.WindowGoogleChrome.Wpf"
    xmlns:ui="clr-namespace:Explorer.WPF.UI"
    mc:Ignorable="d">

    <windowGoogleChrome:GoogleChromeWindow.ToolBarContent>
        <Grid>
            <Grid.RowDefinitions>
                <!--  Search TextBox  -->
                <RowDefinition Height="36" />
                <!--  BookMarks  -->
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--SearchTextBox-->
            <Grid Grid.Row="0" Margin="0 0 0 -1" Background="#35363A">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button
                                        Grid.Column="0"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                        Margin="2"
                                        Command="{Binding CurrentDirectoryTabItem.MoveBackCommand}"
                                        >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border
                                                                    x:Name="border"
                                                                    Height="28"
                                                                    Width="28"
                                                                    CornerRadius="14"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    SnapsToDevicePixels="true">
                                            <Viewbox
                                                                    HorizontalAlignment="Center"
                                                                        Width="20"
                                                                        Height="20"
                                                                        Stretch="Uniform">
                                                <Canvas Width="24" Height="24">
                                                    <Path Fill="{TemplateBinding Foreground}" Data="M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true" />
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="#454545" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsActive,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
                                                                             Value="False">
                                                <Setter Property="Foreground" Value="#666666"></Setter>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsActive,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" Value="False"></Condition>
                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true"></Condition>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="#b8b8b8"></Setter>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="Background" Value="#333333" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false" />
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                                        Grid.Column="1"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                        Margin="2"
                                        Command="{Binding CurrentDirectoryTabItem.MoveForwardCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border
                                                                    x:Name="border"
                                                                    Height="28"
                                                                    Width="28"
                                                                    CornerRadius="14"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    SnapsToDevicePixels="true">
                                            <Viewbox
                                                                    HorizontalAlignment="Center"
                                                                        Width="20"
                                                                        Height="20"
                                                                        Stretch="Uniform">
                                                <Canvas
                                                                        Width="24" Height="24">
                                                    <Path Fill="{TemplateBinding Foreground}" Data="M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true" />
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="#454545" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsActive,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
                                                                             Value="False">
                                                <Setter Property="Foreground" Value="#666666"></Setter>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsActive,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" Value="False"></Condition>
                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true"></Condition>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="#b8b8b8"></Setter>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="Background" Value="#333333" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false" />
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                                        Grid.Column="2"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                        Margin="2"
                                        Content="o" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border
                                                                    x:Name="border"
                                                                    Height="28"
                                                                    Width="28"
                                                                    CornerRadius="14"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    SnapsToDevicePixels="true">
                                            <Viewbox
                                                                    HorizontalAlignment="Center"
                                                                        Width="20"
                                                                        Height="20"
                                                                        Stretch="Uniform">
                                                <Canvas
                                                                        Width="24" Height="24">
                                                    <Path Fill="{TemplateBinding Foreground}" Data="M21,10.12H14.22L16.96,7.3C14.23,4.6 9.81,4.5 7.08,7.2C4.35,9.91 4.35,14.28 7.08,17C9.81,19.7 14.23,19.7 16.96,17C18.32,15.65 19,14.08 19,12.1H21C21,14.08 20.12,16.65 18.36,18.39C14.85,21.87 9.15,21.87 5.64,18.39C2.14,14.92 2.11,9.28 5.62,5.81C9.13,2.34 14.76,2.34 18.27,5.81L21,3V10.12M12.5,8V12.25L16,14.33L15.28,15.54L11,13V8H12.5Z" />
                                                </Canvas>
                                            </Viewbox>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsDefaulted" Value="true" />
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="#454545" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsActive,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}"
                                                                             Value="False">
                                                <Setter Property="Foreground" Value="#666666"></Setter>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsActive,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}}" Value="False"></Condition>
                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true"></Condition>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Foreground" Value="#b8b8b8"></Setter>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="Background" Value="#333333" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false" />
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBox
                                        VerticalAlignment="Center"
                                        Margin="10 0"
                                        Grid.Row="0"
                                        Grid.Column="3"
                                        Text="{Binding CurrentDirectoryTabItem.FilePath}" >
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Background" Value="#202124"/>
                            <Setter Property="BorderBrush" Value="#404D64"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="AllowDrop" Value="true"/>
                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="border"
                                                                    Height="28"
                                                                    CornerRadius="14"
                                                                    Background="{TemplateBinding Background}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    SnapsToDevicePixels="True">
                                            <Grid Margin="20 0"
                                                                      VerticalAlignment="Center">
                                                <ScrollViewer x:Name="PART_ContentHost" 
                                                                        Focusable="false" 
                                                                        HorizontalScrollBarVisibility="Hidden" 
                                                                        VerticalScrollBarVisibility="Hidden"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="#292A2D"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="true">
                                                <Setter Property="BorderThickness" Value="1"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>

            <!--BookMarks-->
            <Grid Visibility="Collapsed" Grid.Row="1" Background="#FF353535">
                <Menu VerticalAlignment="Center" Background="Transparent">
                    <MenuItem Header="Games">
                        <MenuItem Header="C"/>
                        <MenuItem Header="E"/>
                    </MenuItem>
                </Menu>
            </Grid>
        </Grid>
    </windowGoogleChrome:GoogleChromeWindow.ToolBarContent>

    <ContentControl Content="{Binding CurrentDirectoryTabItem}">
        <ContentControl.ContentTemplate>
            <DataTemplate>
                <ui:DirectoryTabItem>
                    <ui:DirectoryTabItem.Background>
                        <SolidColorBrush Color="#35363A"/>
                        <!--<ImageBrush ImageSource="pack://application:,,,/Assets/1624289129_35-phonoteka_org-p-oboi-na-mak-krasivo-36.jpg" Stretch="UniformToFill" />-->
                    </ui:DirectoryTabItem.Background>
                </ui:DirectoryTabItem>
            </DataTemplate>
        </ContentControl.ContentTemplate>
    </ContentControl>
</windowGoogleChrome:GoogleChromeWindow>
